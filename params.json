{"name":"Mdmlang","tagline":"Master Data Management Transformation Language","body":"mdmlang\r\n========\r\n\r\n[![Apache License](http://img.shields.io/badge/license-ASL-blue.svg)](https://github.com/brunocvcunha/mdmlang/blob/master/LICENSE)\r\n[![Build Status](https://travis-ci.org/brunocvcunha/mdmlang.svg)](https://travis-ci.org/brunocvcunha/mdmlang)\r\n\r\nData transformation language that makes the process of mapping data easier and with a natural syntax.\r\nThe grammar for this DSL is based on [Antlr4](http://www.antlr.org/).\r\n\r\nAvailable Operations\r\n--------\r\nThere is some operations that you are able to use (some variations allowed, please check the [grammar file](https://github.com/brunocvcunha/mdmlang/blob/master/src/main/antlr4/org/brunocvcunha/mdmlang/antlr/MDMRule.g4)):\r\n\r\n- keep only numbers of `field`\r\n- trim `field`\r\n- remove leading zeros from `field`\r\n- remove 3 chars from left of `field`\r\n- substring 2 to 3 of `field`\r\n- truncate at 20 `field`\r\n- return `field`\r\n\r\n\r\nUsage Example\r\n--------\r\n\r\nsource-data.json\r\n```json\r\n{\r\n    \"it-codigo\": \" my item \",\r\n    \"desc-item\": \" large description that contains more than 20 chars \",\r\n    \"num-ddd\": 47,\r\n    \"num-telefone\": \"number 9000-1000\"\r\n}\r\n```\r\n\r\nmdmlang-rules.txt\r\n```text\r\nitemCode:\r\n    trim it-codigo\r\n    return it-codigo\r\n\r\ndescription:\r\n    trim desc-item\r\n    truncate at 20 desc-item\r\n    return desc-item\r\n    \r\nphoneNumber:\r\n    trim num-telefone\r\n    keep only numbers of num-telefone\r\n    return num-ddd and num-telefone\r\n```\r\n\r\nJava App:\r\n```java\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.lang.reflect.Type;\r\nimport java.util.Map;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport org.brunocvcunha.mdmlang.processor.MDMProcessorContext;\r\n\r\npublic class MDMLanguageMain {\r\n    public static void main(String[] args) throws IOException {\r\n        Gson gson = new Gson();\r\n\r\n        InputStream rules = MDMLanguageMain.class.getResourceAsStream(\"/mdmlang-rules.txt\");\r\n        InputStream json = MDMLanguageMain.class.getResourceAsStream(\"/source-data.json\");\r\n\r\n        MDMProcessorContext ctx = MDMProcessorContext.buildContext(rules);\r\n        Type type = new TypeToken<Map<String, Object>>() {}.getType();\r\n\r\n        Map<String, Object> values = gson.fromJson(new InputStreamReader(json), type);\r\n        Map<String, Object> golden = ctx.process(values);\r\n\r\n        System.out.println(gson.toJson(golden));\r\n    }\r\n}\r\n```\r\n\r\n\r\nOutputs Transformed Data:\r\n```json\r\n{\r\n    \"itemCode\": \"my item\",\r\n    \"description\": \"large description th\",\r\n    \"phoneNumber\": \"4790001000\"\r\n}\r\n```\r\n\r\n\r\n\r\nDownload \r\n--------\r\n(Release still on process)\r\n\r\nDownload [the latest JAR][1] or grab via Maven:\r\n```xml\r\n<dependency>\r\n  <groupId>org.brunocvcunha.mdmlang</groupId>\r\n  <artifactId>mdmlang</artifactId>\r\n  <version>1.0</version>\r\n</dependency>\r\n```\r\nor Gradle:\r\n```groovy\r\ncompile 'org.brunocvcunha.mdmlang:mdmlang:1.0'\r\n```\r\n\r\nSnapshots of the development version are available in [Sonatype's `snapshots` repository][snap].\r\n\r\nMDM Lang requires at minimum Java 7.\r\n\r\n\r\n [1]: https://search.maven.org/remote_content?g=org.brunocvcunha.mdmlang&a=mdmlang&v=LATEST\r\n [snap]: https://oss.sonatype.org/content/repositories/snapshots/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}